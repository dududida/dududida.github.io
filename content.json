{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://dududida.github.io","root":"/"},"pages":[],"posts":[{"title":"MIT 6.828","slug":"6.828","date":"2023-01-08T06:50:06.704Z","updated":"2023-01-09T13:58:22.170Z","comments":true,"path":"2023/01/08/6.828/","link":"","permalink":"https://dududida.github.io/2023/01/08/6.828/","excerpt":"","text":"xv6的安装 条件：Vmware上运行的unbuntu虚拟机 123456789$ sudo apt-get install git build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu $ git clone git://g.csail.mit.edu/xv6-labs-2021$ cd xv6-labs-2021$ git checkout util$ make qemu ##运行xv6$ Ctrl+a x ##退出xv6 关于各种系统调用 pipe():int pipe(int fds[2]); 在进程的打开文件表中查找前两个可用位置，并将它们分配给管道的读p[0]写p[1]端。 chdir():int chdir(const char *path); 用于改变当前工作目录，其参数为Path 目标目录（类似于cd） 实验 以下路径都在xv6-labs-2021/下面 sleepuser/目录下新建sleep.c，代码如下 1234567891011121314151617#include &quot;kernel/types.h&quot;#include &quot;kernel/stat.h&quot;#include &quot;user/user.h&quot;int main(int argc, char *argv[])&#123; if(argc&lt;2)&#123; //缺少参数 fprintf(2,&quot;miss argument !\\n&quot;); exit(1); &#125; int time; time = atoi(argv[1]); if(time&lt;0)&#123; //参数不合法 ，实际运行中好像没反应。但是make grade是过了 fprintf(2,&quot;invalid argument !\\n&quot;); exit(1); &#125; sleep(time); exit(0);&#125; 打开Makefile，在179行找到UPROGS，在其中添加sleep。 回到xv6-labs-2021/，$ make qemu 测试是否通过，在xv6-labs-2021/目录下：$ ./grade-lab-util sleep pingpong不加wait，会出现缓冲区冲突，交替写入。 1.8晚上。自己测试没问题，在进行成绩测试时没通过。 在多次执行pingpong时，输出的pid依次增加，按理说不应该这样。 1234567891011121314151617181920212223242526272829303132333435363738394041#include &quot;kernel/types.h&quot;#include &quot;kernel/stat.h&quot;#include &quot;user/user.h&quot;int main(int argc,char *argv[])&#123; int p1[2]; //pipe1 int p2[2]; //pipe2 pipe(p1); pipe(p2); int pid; char readBuffer[20]; int rsize; if(fork()===0)&#123; pid = getpid(); close(p1[1]); close(p2[0]); write(p2[1],&quot;p&quot;,1); rsize = read(p1[0],readBuffer,1); if(rsize)&#123; fprintf(1,&quot;%d:received ping\\n&quot;,pid); exit(0); &#125; exit(1); &#125; pid = getpid(); close(p1[0]); close(p2[1]); write(p1[1],&quot;p&quot;,1); int userStat; wait(&amp;userStat); rsize = read(p2[0],readBuffer,1); if(rsize)&#123; fprintf(1,&quot;%d:received pong\\n&quot;,pid); exit(0); &#125; exit(1);&#125;","categories":[{"name":"学习记录","slug":"学习记录","permalink":"https://dududida.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[]},{"title":"摄影学习笔记","slug":"摄影学习笔记","date":"2022-03-14T09:20:30.285Z","updated":"2023-01-09T13:34:44.253Z","comments":true,"path":"2022/03/14/摄影学习笔记/","link":"","permalink":"https://dududida.github.io/2022/03/14/%E6%91%84%E5%BD%B1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"如何减少夜景噪点 降低iso (最好不要高于400) 快门速度变慢 (延长曝光时间) 使用三角架 小知识 如果其他参数不变，曝光时间越长，照片就越亮 感光度过高容易产生噪点 名词解释 EV(Exposure Value,曝光值) 基本可以理解为EV越高，拍摄环境的亮度越高。(文章链接：摄影基础文：什么是EV？)","categories":[{"name":"杂七杂八","slug":"杂七杂八","permalink":"https://dududida.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"}],"tags":[]},{"title":"电线杆子上的人","slug":"story_1","date":"2022-03-08T05:42:23.092Z","updated":"2023-01-09T13:47:01.871Z","comments":true,"path":"2022/03/08/story_1/","link":"","permalink":"https://dududida.github.io/2022/03/08/story_1/","excerpt":"","text":"&emsp;&emsp;电线杆子，一根又一根的电线杆子。电线杆子之间的电线，平行的电线构成了一条直直的，宽敞的道路。&emsp;&emsp;电线杆子上的人就在这样的道路上走着，他们从这里到哪里，他们几乎不休息地走着，他们有时跳跃，有时奔跑。他们偶尔也会停下来，蹲在电线杆子上看着杆子下的人。他们看他们交谈，看他们争吵。&emsp;&emsp;他们真的知道下面的人在讲什么吗？他们不知道，他们是电线杆子上的人，他们只是笑一笑，然后继续向前走去。","categories":[{"name":"杂七杂八","slug":"杂七杂八","permalink":"https://dududida.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"}],"tags":[]}],"categories":[{"name":"学习记录","slug":"学习记录","permalink":"https://dududida.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"},{"name":"杂七杂八","slug":"杂七杂八","permalink":"https://dududida.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"}],"tags":[]}